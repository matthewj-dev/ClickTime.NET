// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ClickTime.NET.Models.Get {
    public class InternalJobDropdownModel_Root : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The Clients property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InternalJobDropdownModel_Root_Clients? Clients { get; set; }
#nullable restore
#else
        public InternalJobDropdownModel_Root_Clients Clients { get; set; }
#endif
        /// <summary>The Jobs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public InternalJobDropdownModel_Root_Jobs? Jobs { get; set; }
#nullable restore
#else
        public InternalJobDropdownModel_Root_Jobs Jobs { get; set; }
#endif
        /// <summary>
        /// Instantiates a new InternalJobDropdownModel_Root and sets the default values.
        /// </summary>
        public InternalJobDropdownModel_Root() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static InternalJobDropdownModel_Root CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new InternalJobDropdownModel_Root();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"Clients", n => { Clients = n.GetObjectValue<InternalJobDropdownModel_Root_Clients>(InternalJobDropdownModel_Root_Clients.CreateFromDiscriminatorValue); } },
                {"Jobs", n => { Jobs = n.GetObjectValue<InternalJobDropdownModel_Root_Jobs>(InternalJobDropdownModel_Root_Jobs.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<InternalJobDropdownModel_Root_Clients>("Clients", Clients);
            writer.WriteObjectValue<InternalJobDropdownModel_Root_Jobs>("Jobs", Jobs);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
