// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ClickTime.NET.Models.Get {
    public class UserModel_Me : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>  Company requirements:Timesheet Approval Permission</summary>
        public bool? AllowIncompleteTimesheetSubmission { get; set; }
        /// <summary>The AuthToken property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UserAuthTokenModel? AuthToken { get; set; }
#nullable restore
#else
        public UserAuthTokenModel AuthToken { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true  Company requirements:Expense Permission</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicExpenseTypeModel_DefaultExpenseType_Get.UserModel_Me? DefaultExpenseType { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicExpenseTypeModel_DefaultExpenseType_Get.UserModel_Me DefaultExpenseType { get; set; }
#endif
        /// <summary>  Company requirements:Expense Permission</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultExpenseTypeID { get; set; }
#nullable restore
#else
        public string DefaultExpenseTypeID { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true  Company requirements:Expense Permission</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicPaymentTypeModel_DefaultPaymentType_Get.UserModel_Me? DefaultPaymentType { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicPaymentTypeModel_DefaultPaymentType_Get.UserModel_Me DefaultPaymentType { get; set; }
#endif
        /// <summary>  Company requirements:Expense Permission</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultPaymentTypeID { get; set; }
#nullable restore
#else
        public string DefaultPaymentTypeID { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicTaskModel_DefaultTask_Get.UserModel_Me? DefaultTask { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicTaskModel_DefaultTask_Get.UserModel_Me DefaultTask { get; set; }
#endif
        /// <summary>The DefaultTaskID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultTaskID { get; set; }
#nullable restore
#else
        public string DefaultTaskID { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicDivisionModel_Division_Get.UserModel_Me? Division { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicDivisionModel_Division_Get.UserModel_Me Division { get; set; }
#endif
        /// <summary>The DivisionID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DivisionID { get; set; }
#nullable restore
#else
        public string DivisionID { get; set; }
#endif
        /// <summary>The Email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The EmployeeNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmployeeNumber { get; set; }
#nullable restore
#else
        public string EmployeeNumber { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicEmploymentTypeModel_EmploymentType_Get.UserModel_Me? EmploymentType { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicEmploymentTypeModel_EmploymentType_Get.UserModel_Me EmploymentType { get; set; }
#endif
        /// <summary>The EmploymentTypeID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmploymentTypeID { get; set; }
#nullable restore
#else
        public string EmploymentTypeID { get; set; }
#endif
        /// <summary>The EnableBreakTime property</summary>
        public bool? EnableBreakTime { get; set; }
        /// <summary>The EndDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndDate { get; set; }
#nullable restore
#else
        public string EndDate { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true  Company requirements:Expense Permission</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicUserModel_ExpenseApprover_Get.UserModel_Me? ExpenseApprover { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicUserModel_ExpenseApprover_Get.UserModel_Me ExpenseApprover { get; set; }
#endif
        /// <summary>  Company requirements:Expense Permission</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExpenseApproverID { get; set; }
#nullable restore
#else
        public string ExpenseApproverID { get; set; }
#endif
        /// <summary>The ExpenseSheetApprovedAlert property</summary>
        public bool? ExpenseSheetApprovedAlert { get; set; }
        /// <summary>The ExpenseSheetPaidAlert property</summary>
        public bool? ExpenseSheetPaidAlert { get; set; }
        /// <summary>The GDPRConsentStatus property</summary>
        public UserModel_Me_GDPRConsentStatus? GDPRConsentStatus { get; set; }
        /// <summary>The HomePage property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public BasicHomePageModel? HomePage { get; set; }
#nullable restore
#else
        public BasicHomePageModel HomePage { get; set; }
#endif
        /// <summary>The ID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ID { get; set; }
#nullable restore
#else
        public string ID { get; set; }
#endif
        /// <summary>  Company requirements:Optional module(s): Resource Management</summary>
        public bool? IncludeInRM { get; set; }
        /// <summary>The IsActive property</summary>
        public bool? IsActive { get; set; }
        /// <summary>  Company requirements:Time Off Management Permission</summary>
        public bool? IsDefaultLeaveTypeApprover { get; set; }
        /// <summary>  Company requirements:Expense Permission</summary>
        public bool? IsExpenseApprover { get; set; }
        /// <summary>  Company requirements:Timesheet Approval Permission</summary>
        public bool? IsTimeApprover { get; set; }
        /// <summary>  Company requirements:Time Off Management Permission</summary>
        public bool? IsTimeOffApprover { get; set; }
        /// <summary>The JobSelectionMethod property</summary>
        public UserModel_Me_JobSelectionMethod? JobSelectionMethod { get; set; }
        /// <summary>  Request requirements:CTLegacyScramble=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LegacyID { get; set; }
#nullable restore
#else
        public string LegacyID { get; set; }
#endif
        /// <summary>The MinimumTimeHours property</summary>
        public double? MinimumTimeHours { get; set; }
        /// <summary>The MinimumTimePeriod property</summary>
        public UserModel_Me_MinimumTimePeriod? MinimumTimePeriod { get; set; }
        /// <summary>The Name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The NumEntries property</summary>
        public int? NumEntries { get; set; }
        /// <summary>The PreferredTimeEntryView property</summary>
        public UserModel_Me_PreferredTimeEntryView? PreferredTimeEntryView { get; set; }
        /// <summary>The PreferredTimeFormat property</summary>
        public UserModel_Me_PreferredTimeFormat? PreferredTimeFormat { get; set; }
        /// <summary>The RequireComments property</summary>
        public bool? RequireComments { get; set; }
        /// <summary>The RequireStartEndTime property</summary>
        public bool? RequireStartEndTime { get; set; }
        /// <summary>The RequireStopwatch property</summary>
        public bool? RequireStopwatch { get; set; }
        /// <summary>The SecurityLevel property</summary>
        public UserModel_Me_SecurityLevel? SecurityLevel { get; set; }
        /// <summary>The SkipWeekend property</summary>
        public bool? SkipWeekend { get; set; }
        /// <summary>The StartDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartDate { get; set; }
#nullable restore
#else
        public string StartDate { get; set; }
#endif
        /// <summary>  Company requirements:Expense Permission</summary>
        public bool? SubjectToExpenseApproval { get; set; }
        /// <summary>  Company requirements:Timesheet Approval Permission</summary>
        public bool? SubjectToTimesheetApproval { get; set; }
        /// <summary>The SubjectToTimesheetCompletion property</summary>
        public bool? SubjectToTimesheetCompletion { get; set; }
        /// <summary>  Request requirements:Verbose=true  Company requirements:Time Off Management Permission</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicUserModel_TimeOffApprover_Get.UserModel_Me? TimeOffApprover { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicUserModel_TimeOffApprover_Get.UserModel_Me TimeOffApprover { get; set; }
#endif
        /// <summary>  Company requirements:Time Off Management Permission</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimeOffApproverID { get; set; }
#nullable restore
#else
        public string TimeOffApproverID { get; set; }
#endif
        /// <summary>The TimesheetApprovedAlert property</summary>
        public bool? TimesheetApprovedAlert { get; set; }
        /// <summary>  Request requirements:Verbose=true  Company requirements:Timesheet Approval Permission</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicUserModel_TimesheetApprover_Get.UserModel_Me? TimesheetApprover { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicUserModel_TimesheetApprover_Get.UserModel_Me TimesheetApprover { get; set; }
#endif
        /// <summary>  Company requirements:Timesheet Approval Permission</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimesheetApproverID { get; set; }
#nullable restore
#else
        public string TimesheetApproverID { get; set; }
#endif
        /// <summary>
        /// Instantiates a new UserModel_Me and sets the default values.
        /// </summary>
        public UserModel_Me() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static UserModel_Me CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new UserModel_Me();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"AllowIncompleteTimesheetSubmission", n => { AllowIncompleteTimesheetSubmission = n.GetBoolValue(); } },
                {"AuthToken", n => { AuthToken = n.GetObjectValue<UserAuthTokenModel>(UserAuthTokenModel.CreateFromDiscriminatorValue); } },
                {"DefaultExpenseType", n => { DefaultExpenseType = n.GetObjectValue<ClickTime.NET.Models.Get.BasicExpenseTypeModel_DefaultExpenseType_Get.UserModel_Me>(ClickTime.NET.Models.Get.BasicExpenseTypeModel_DefaultExpenseType_Get.UserModel_Me.CreateFromDiscriminatorValue); } },
                {"DefaultExpenseTypeID", n => { DefaultExpenseTypeID = n.GetStringValue(); } },
                {"DefaultPaymentType", n => { DefaultPaymentType = n.GetObjectValue<ClickTime.NET.Models.Get.BasicPaymentTypeModel_DefaultPaymentType_Get.UserModel_Me>(ClickTime.NET.Models.Get.BasicPaymentTypeModel_DefaultPaymentType_Get.UserModel_Me.CreateFromDiscriminatorValue); } },
                {"DefaultPaymentTypeID", n => { DefaultPaymentTypeID = n.GetStringValue(); } },
                {"DefaultTask", n => { DefaultTask = n.GetObjectValue<ClickTime.NET.Models.Get.BasicTaskModel_DefaultTask_Get.UserModel_Me>(ClickTime.NET.Models.Get.BasicTaskModel_DefaultTask_Get.UserModel_Me.CreateFromDiscriminatorValue); } },
                {"DefaultTaskID", n => { DefaultTaskID = n.GetStringValue(); } },
                {"Division", n => { Division = n.GetObjectValue<ClickTime.NET.Models.Get.BasicDivisionModel_Division_Get.UserModel_Me>(ClickTime.NET.Models.Get.BasicDivisionModel_Division_Get.UserModel_Me.CreateFromDiscriminatorValue); } },
                {"DivisionID", n => { DivisionID = n.GetStringValue(); } },
                {"Email", n => { Email = n.GetStringValue(); } },
                {"EmployeeNumber", n => { EmployeeNumber = n.GetStringValue(); } },
                {"EmploymentType", n => { EmploymentType = n.GetObjectValue<ClickTime.NET.Models.Get.BasicEmploymentTypeModel_EmploymentType_Get.UserModel_Me>(ClickTime.NET.Models.Get.BasicEmploymentTypeModel_EmploymentType_Get.UserModel_Me.CreateFromDiscriminatorValue); } },
                {"EmploymentTypeID", n => { EmploymentTypeID = n.GetStringValue(); } },
                {"EnableBreakTime", n => { EnableBreakTime = n.GetBoolValue(); } },
                {"EndDate", n => { EndDate = n.GetStringValue(); } },
                {"ExpenseApprover", n => { ExpenseApprover = n.GetObjectValue<ClickTime.NET.Models.Get.BasicUserModel_ExpenseApprover_Get.UserModel_Me>(ClickTime.NET.Models.Get.BasicUserModel_ExpenseApprover_Get.UserModel_Me.CreateFromDiscriminatorValue); } },
                {"ExpenseApproverID", n => { ExpenseApproverID = n.GetStringValue(); } },
                {"ExpenseSheetApprovedAlert", n => { ExpenseSheetApprovedAlert = n.GetBoolValue(); } },
                {"ExpenseSheetPaidAlert", n => { ExpenseSheetPaidAlert = n.GetBoolValue(); } },
                {"GDPRConsentStatus", n => { GDPRConsentStatus = n.GetEnumValue<UserModel_Me_GDPRConsentStatus>(); } },
                {"HomePage", n => { HomePage = n.GetObjectValue<BasicHomePageModel>(BasicHomePageModel.CreateFromDiscriminatorValue); } },
                {"ID", n => { ID = n.GetStringValue(); } },
                {"IncludeInRM", n => { IncludeInRM = n.GetBoolValue(); } },
                {"IsActive", n => { IsActive = n.GetBoolValue(); } },
                {"IsDefaultLeaveTypeApprover", n => { IsDefaultLeaveTypeApprover = n.GetBoolValue(); } },
                {"IsExpenseApprover", n => { IsExpenseApprover = n.GetBoolValue(); } },
                {"IsTimeApprover", n => { IsTimeApprover = n.GetBoolValue(); } },
                {"IsTimeOffApprover", n => { IsTimeOffApprover = n.GetBoolValue(); } },
                {"JobSelectionMethod", n => { JobSelectionMethod = n.GetEnumValue<UserModel_Me_JobSelectionMethod>(); } },
                {"LegacyID", n => { LegacyID = n.GetStringValue(); } },
                {"MinimumTimeHours", n => { MinimumTimeHours = n.GetDoubleValue(); } },
                {"MinimumTimePeriod", n => { MinimumTimePeriod = n.GetEnumValue<UserModel_Me_MinimumTimePeriod>(); } },
                {"Name", n => { Name = n.GetStringValue(); } },
                {"NumEntries", n => { NumEntries = n.GetIntValue(); } },
                {"PreferredTimeEntryView", n => { PreferredTimeEntryView = n.GetEnumValue<UserModel_Me_PreferredTimeEntryView>(); } },
                {"PreferredTimeFormat", n => { PreferredTimeFormat = n.GetEnumValue<UserModel_Me_PreferredTimeFormat>(); } },
                {"RequireComments", n => { RequireComments = n.GetBoolValue(); } },
                {"RequireStartEndTime", n => { RequireStartEndTime = n.GetBoolValue(); } },
                {"RequireStopwatch", n => { RequireStopwatch = n.GetBoolValue(); } },
                {"SecurityLevel", n => { SecurityLevel = n.GetEnumValue<UserModel_Me_SecurityLevel>(); } },
                {"SkipWeekend", n => { SkipWeekend = n.GetBoolValue(); } },
                {"StartDate", n => { StartDate = n.GetStringValue(); } },
                {"SubjectToExpenseApproval", n => { SubjectToExpenseApproval = n.GetBoolValue(); } },
                {"SubjectToTimesheetApproval", n => { SubjectToTimesheetApproval = n.GetBoolValue(); } },
                {"SubjectToTimesheetCompletion", n => { SubjectToTimesheetCompletion = n.GetBoolValue(); } },
                {"TimeOffApprover", n => { TimeOffApprover = n.GetObjectValue<ClickTime.NET.Models.Get.BasicUserModel_TimeOffApprover_Get.UserModel_Me>(ClickTime.NET.Models.Get.BasicUserModel_TimeOffApprover_Get.UserModel_Me.CreateFromDiscriminatorValue); } },
                {"TimeOffApproverID", n => { TimeOffApproverID = n.GetStringValue(); } },
                {"TimesheetApprovedAlert", n => { TimesheetApprovedAlert = n.GetBoolValue(); } },
                {"TimesheetApprover", n => { TimesheetApprover = n.GetObjectValue<ClickTime.NET.Models.Get.BasicUserModel_TimesheetApprover_Get.UserModel_Me>(ClickTime.NET.Models.Get.BasicUserModel_TimesheetApprover_Get.UserModel_Me.CreateFromDiscriminatorValue); } },
                {"TimesheetApproverID", n => { TimesheetApproverID = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("AllowIncompleteTimesheetSubmission", AllowIncompleteTimesheetSubmission);
            writer.WriteObjectValue<UserAuthTokenModel>("AuthToken", AuthToken);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicExpenseTypeModel_DefaultExpenseType_Get.UserModel_Me>("DefaultExpenseType", DefaultExpenseType);
            writer.WriteStringValue("DefaultExpenseTypeID", DefaultExpenseTypeID);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicPaymentTypeModel_DefaultPaymentType_Get.UserModel_Me>("DefaultPaymentType", DefaultPaymentType);
            writer.WriteStringValue("DefaultPaymentTypeID", DefaultPaymentTypeID);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicTaskModel_DefaultTask_Get.UserModel_Me>("DefaultTask", DefaultTask);
            writer.WriteStringValue("DefaultTaskID", DefaultTaskID);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicDivisionModel_Division_Get.UserModel_Me>("Division", Division);
            writer.WriteStringValue("DivisionID", DivisionID);
            writer.WriteStringValue("Email", Email);
            writer.WriteStringValue("EmployeeNumber", EmployeeNumber);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicEmploymentTypeModel_EmploymentType_Get.UserModel_Me>("EmploymentType", EmploymentType);
            writer.WriteStringValue("EmploymentTypeID", EmploymentTypeID);
            writer.WriteBoolValue("EnableBreakTime", EnableBreakTime);
            writer.WriteStringValue("EndDate", EndDate);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicUserModel_ExpenseApprover_Get.UserModel_Me>("ExpenseApprover", ExpenseApprover);
            writer.WriteStringValue("ExpenseApproverID", ExpenseApproverID);
            writer.WriteBoolValue("ExpenseSheetApprovedAlert", ExpenseSheetApprovedAlert);
            writer.WriteBoolValue("ExpenseSheetPaidAlert", ExpenseSheetPaidAlert);
            writer.WriteEnumValue<UserModel_Me_GDPRConsentStatus>("GDPRConsentStatus", GDPRConsentStatus);
            writer.WriteObjectValue<BasicHomePageModel>("HomePage", HomePage);
            writer.WriteStringValue("ID", ID);
            writer.WriteBoolValue("IncludeInRM", IncludeInRM);
            writer.WriteBoolValue("IsActive", IsActive);
            writer.WriteBoolValue("IsDefaultLeaveTypeApprover", IsDefaultLeaveTypeApprover);
            writer.WriteBoolValue("IsExpenseApprover", IsExpenseApprover);
            writer.WriteBoolValue("IsTimeApprover", IsTimeApprover);
            writer.WriteBoolValue("IsTimeOffApprover", IsTimeOffApprover);
            writer.WriteEnumValue<UserModel_Me_JobSelectionMethod>("JobSelectionMethod", JobSelectionMethod);
            writer.WriteStringValue("LegacyID", LegacyID);
            writer.WriteDoubleValue("MinimumTimeHours", MinimumTimeHours);
            writer.WriteEnumValue<UserModel_Me_MinimumTimePeriod>("MinimumTimePeriod", MinimumTimePeriod);
            writer.WriteStringValue("Name", Name);
            writer.WriteIntValue("NumEntries", NumEntries);
            writer.WriteEnumValue<UserModel_Me_PreferredTimeEntryView>("PreferredTimeEntryView", PreferredTimeEntryView);
            writer.WriteEnumValue<UserModel_Me_PreferredTimeFormat>("PreferredTimeFormat", PreferredTimeFormat);
            writer.WriteBoolValue("RequireComments", RequireComments);
            writer.WriteBoolValue("RequireStartEndTime", RequireStartEndTime);
            writer.WriteBoolValue("RequireStopwatch", RequireStopwatch);
            writer.WriteEnumValue<UserModel_Me_SecurityLevel>("SecurityLevel", SecurityLevel);
            writer.WriteBoolValue("SkipWeekend", SkipWeekend);
            writer.WriteStringValue("StartDate", StartDate);
            writer.WriteBoolValue("SubjectToExpenseApproval", SubjectToExpenseApproval);
            writer.WriteBoolValue("SubjectToTimesheetApproval", SubjectToTimesheetApproval);
            writer.WriteBoolValue("SubjectToTimesheetCompletion", SubjectToTimesheetCompletion);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicUserModel_TimeOffApprover_Get.UserModel_Me>("TimeOffApprover", TimeOffApprover);
            writer.WriteStringValue("TimeOffApproverID", TimeOffApproverID);
            writer.WriteBoolValue("TimesheetApprovedAlert", TimesheetApprovedAlert);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicUserModel_TimesheetApprover_Get.UserModel_Me>("TimesheetApprover", TimesheetApprover);
            writer.WriteStringValue("TimesheetApproverID", TimesheetApproverID);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
