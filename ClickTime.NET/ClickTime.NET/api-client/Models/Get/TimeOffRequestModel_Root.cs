// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ClickTime.NET.Models.Get {
    public class TimeOffRequestModel_Root : IAdditionalDataHolder, IParsable {
        /// <summary>The Actions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ActionModelRequestAction>? Actions { get; set; }
#nullable restore
#else
        public List<ActionModelRequestAction> Actions { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicUserModel_ApprovalByUser_Get.TimeOffRequestModel_Root? ApprovalByUser { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicUserModel_ApprovalByUser_Get.TimeOffRequestModel_Root ApprovalByUser { get; set; }
#endif
        /// <summary>The ApprovalByUserID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApprovalByUserID { get; set; }
#nullable restore
#else
        public string ApprovalByUserID { get; set; }
#endif
        /// <summary>The CreatedDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedDate { get; set; }
#nullable restore
#else
        public string CreatedDate { get; set; }
#endif
        /// <summary>The Dates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ClickTime.NET.Models.Get.TimeOffRequestDateModel_Dates_Get.TimeOffRequestModel_Root>? Dates { get; set; }
#nullable restore
#else
        public List<ClickTime.NET.Models.Get.TimeOffRequestDateModel_Dates_Get.TimeOffRequestModel_Root> Dates { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true  User requirements:Security Level(s): Admin, Manager (Approve Time Off using a WithPermission filter)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ClickTime.NET.Models.Get.TimeOffRequestHistoryModel_History_Get.TimeOffRequestModel_Root>? History { get; set; }
#nullable restore
#else
        public List<ClickTime.NET.Models.Get.TimeOffRequestHistoryModel_History_Get.TimeOffRequestModel_Root> History { get; set; }
#endif
        /// <summary>The ID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ID { get; set; }
#nullable restore
#else
        public string ID { get; set; }
#endif
        /// <summary>  Request requirements:CTLegacyScramble=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LegacyID { get; set; }
#nullable restore
#else
        public string LegacyID { get; set; }
#endif
        /// <summary>  User requirements:Security Level(s): Admin, Manager (Approve Time Off using a WithPermission filter)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Notes { get; set; }
#nullable restore
#else
        public string Notes { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicUserModel_RequestedByUser_Get.TimeOffRequestModel_Root? RequestedByUser { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicUserModel_RequestedByUser_Get.TimeOffRequestModel_Root RequestedByUser { get; set; }
#endif
        /// <summary>The RequestedByUserID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequestedByUserID { get; set; }
#nullable restore
#else
        public string RequestedByUserID { get; set; }
#endif
        /// <summary>The Status property</summary>
        public TimeOffRequestModel_Root_Status? Status { get; set; }
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicTimeOffTypeModel_TimeOffType_Get.TimeOffRequestModel_Root? TimeOffType { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicTimeOffTypeModel_TimeOffType_Get.TimeOffRequestModel_Root TimeOffType { get; set; }
#endif
        /// <summary>The TimeOffTypeID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimeOffTypeID { get; set; }
#nullable restore
#else
        public string TimeOffTypeID { get; set; }
#endif
        /// <summary>
        /// Instantiates a new TimeOffRequestModel_Root and sets the default values.
        /// </summary>
        public TimeOffRequestModel_Root() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static TimeOffRequestModel_Root CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new TimeOffRequestModel_Root();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"Actions", n => { Actions = n.GetCollectionOfObjectValues<ActionModelRequestAction>(ActionModelRequestAction.CreateFromDiscriminatorValue)?.ToList(); } },
                {"ApprovalByUser", n => { ApprovalByUser = n.GetObjectValue<ClickTime.NET.Models.Get.BasicUserModel_ApprovalByUser_Get.TimeOffRequestModel_Root>(ClickTime.NET.Models.Get.BasicUserModel_ApprovalByUser_Get.TimeOffRequestModel_Root.CreateFromDiscriminatorValue); } },
                {"ApprovalByUserID", n => { ApprovalByUserID = n.GetStringValue(); } },
                {"CreatedDate", n => { CreatedDate = n.GetStringValue(); } },
                {"Dates", n => { Dates = n.GetCollectionOfObjectValues<ClickTime.NET.Models.Get.TimeOffRequestDateModel_Dates_Get.TimeOffRequestModel_Root>(ClickTime.NET.Models.Get.TimeOffRequestDateModel_Dates_Get.TimeOffRequestModel_Root.CreateFromDiscriminatorValue)?.ToList(); } },
                {"History", n => { History = n.GetCollectionOfObjectValues<ClickTime.NET.Models.Get.TimeOffRequestHistoryModel_History_Get.TimeOffRequestModel_Root>(ClickTime.NET.Models.Get.TimeOffRequestHistoryModel_History_Get.TimeOffRequestModel_Root.CreateFromDiscriminatorValue)?.ToList(); } },
                {"ID", n => { ID = n.GetStringValue(); } },
                {"LegacyID", n => { LegacyID = n.GetStringValue(); } },
                {"Notes", n => { Notes = n.GetStringValue(); } },
                {"RequestedByUser", n => { RequestedByUser = n.GetObjectValue<ClickTime.NET.Models.Get.BasicUserModel_RequestedByUser_Get.TimeOffRequestModel_Root>(ClickTime.NET.Models.Get.BasicUserModel_RequestedByUser_Get.TimeOffRequestModel_Root.CreateFromDiscriminatorValue); } },
                {"RequestedByUserID", n => { RequestedByUserID = n.GetStringValue(); } },
                {"Status", n => { Status = n.GetEnumValue<TimeOffRequestModel_Root_Status>(); } },
                {"TimeOffType", n => { TimeOffType = n.GetObjectValue<ClickTime.NET.Models.Get.BasicTimeOffTypeModel_TimeOffType_Get.TimeOffRequestModel_Root>(ClickTime.NET.Models.Get.BasicTimeOffTypeModel_TimeOffType_Get.TimeOffRequestModel_Root.CreateFromDiscriminatorValue); } },
                {"TimeOffTypeID", n => { TimeOffTypeID = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<ActionModelRequestAction>("Actions", Actions);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicUserModel_ApprovalByUser_Get.TimeOffRequestModel_Root>("ApprovalByUser", ApprovalByUser);
            writer.WriteStringValue("ApprovalByUserID", ApprovalByUserID);
            writer.WriteStringValue("CreatedDate", CreatedDate);
            writer.WriteCollectionOfObjectValues<ClickTime.NET.Models.Get.TimeOffRequestDateModel_Dates_Get.TimeOffRequestModel_Root>("Dates", Dates);
            writer.WriteCollectionOfObjectValues<ClickTime.NET.Models.Get.TimeOffRequestHistoryModel_History_Get.TimeOffRequestModel_Root>("History", History);
            writer.WriteStringValue("ID", ID);
            writer.WriteStringValue("LegacyID", LegacyID);
            writer.WriteStringValue("Notes", Notes);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicUserModel_RequestedByUser_Get.TimeOffRequestModel_Root>("RequestedByUser", RequestedByUser);
            writer.WriteStringValue("RequestedByUserID", RequestedByUserID);
            writer.WriteEnumValue<TimeOffRequestModel_Root_Status>("Status", Status);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicTimeOffTypeModel_TimeOffType_Get.TimeOffRequestModel_Root>("TimeOffType", TimeOffType);
            writer.WriteStringValue("TimeOffTypeID", TimeOffTypeID);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
