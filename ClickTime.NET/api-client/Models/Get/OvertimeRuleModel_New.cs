// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ClickTime.NET.Models.Get {
    public class OvertimeRuleModel_New : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The CreatedDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedDate { get; set; }
#nullable restore
#else
        public string CreatedDate { get; set; }
#endif
        /// <summary>The ID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ID { get; set; }
#nullable restore
#else
        public string ID { get; set; }
#endif
        /// <summary>The IsActive property</summary>
        public bool? IsActive { get; set; }
        /// <summary>The ModifiedDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ModifiedDate { get; set; }
#nullable restore
#else
        public string ModifiedDate { get; set; }
#endif
        /// <summary>The OvertimeDefinitionID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OvertimeDefinitionID { get; set; }
#nullable restore
#else
        public string OvertimeDefinitionID { get; set; }
#endif
        /// <summary>The RuleDefinition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicRuleDefinitionModel_RuleDefinition_Get.OvertimeRuleModel_New? RuleDefinition { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicRuleDefinitionModel_RuleDefinition_Get.OvertimeRuleModel_New RuleDefinition { get; set; }
#endif
        /// <summary>
        /// Instantiates a new OvertimeRuleModel_New and sets the default values.
        /// </summary>
        public OvertimeRuleModel_New() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static OvertimeRuleModel_New CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new OvertimeRuleModel_New();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"CreatedDate", n => { CreatedDate = n.GetStringValue(); } },
                {"ID", n => { ID = n.GetStringValue(); } },
                {"IsActive", n => { IsActive = n.GetBoolValue(); } },
                {"ModifiedDate", n => { ModifiedDate = n.GetStringValue(); } },
                {"OvertimeDefinitionID", n => { OvertimeDefinitionID = n.GetStringValue(); } },
                {"RuleDefinition", n => { RuleDefinition = n.GetObjectValue<ClickTime.NET.Models.Get.BasicRuleDefinitionModel_RuleDefinition_Get.OvertimeRuleModel_New>(ClickTime.NET.Models.Get.BasicRuleDefinitionModel_RuleDefinition_Get.OvertimeRuleModel_New.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("CreatedDate", CreatedDate);
            writer.WriteStringValue("ID", ID);
            writer.WriteBoolValue("IsActive", IsActive);
            writer.WriteStringValue("ModifiedDate", ModifiedDate);
            writer.WriteStringValue("OvertimeDefinitionID", OvertimeDefinitionID);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicRuleDefinitionModel_RuleDefinition_Get.OvertimeRuleModel_New>("RuleDefinition", RuleDefinition);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
