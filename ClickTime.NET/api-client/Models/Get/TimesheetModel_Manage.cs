// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ClickTime.NET.Models.Get {
    public class TimesheetModel_Manage : IAdditionalDataHolder, IParsable {
        /// <summary>The actions listed in this endpointâ€™s response are generalized. To obtaina more explicit set of available actions for a particular Timesheet ID, itis recommended to use the appropriate /Timesheets/ID/Actions endpoint.  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ActionModelTimesheetAction>? Actions { get; set; }
#nullable restore
#else
        public List<ActionModelTimesheetAction> Actions { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApprovedBy { get; set; }
#nullable restore
#else
        public string ApprovedBy { get; set; }
#endif
        /// <summary>The ApprovedByUserID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApprovedByUserID { get; set; }
#nullable restore
#else
        public string ApprovedByUserID { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApprovedDate { get; set; }
#nullable restore
#else
        public string ApprovedDate { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Comment { get; set; }
#nullable restore
#else
        public string Comment { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<DayTotalModel>? DayTotals { get; set; }
#nullable restore
#else
        public List<DayTotalModel> DayTotals { get; set; }
#endif
        /// <summary>The EndDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndDate { get; set; }
#nullable restore
#else
        public string EndDate { get; set; }
#endif
        /// <summary>The HasBeenSubmitted property</summary>
        public bool? HasBeenSubmitted { get; set; }
        /// <summary>The ID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ID { get; set; }
#nullable restore
#else
        public string ID { get; set; }
#endif
        /// <summary>  Request requirements:CTLegacyScramble=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LegacyID { get; set; }
#nullable restore
#else
        public string LegacyID { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RejectedBy { get; set; }
#nullable restore
#else
        public string RejectedBy { get; set; }
#endif
        /// <summary>The RejectedByUserID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RejectedByUserID { get; set; }
#nullable restore
#else
        public string RejectedByUserID { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RejectedDate { get; set; }
#nullable restore
#else
        public string RejectedDate { get; set; }
#endif
        /// <summary>The StartDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartDate { get; set; }
#nullable restore
#else
        public string StartDate { get; set; }
#endif
        /// <summary>The Status property</summary>
        public TimesheetModel_Manage_Status? Status { get; set; }
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubmittedBy { get; set; }
#nullable restore
#else
        public string SubmittedBy { get; set; }
#endif
        /// <summary>The SubmittedByUserID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubmittedByUserID { get; set; }
#nullable restore
#else
        public string SubmittedByUserID { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubmittedDate { get; set; }
#nullable restore
#else
        public string SubmittedDate { get; set; }
#endif
        /// <summary>  Request requirements:Verbose=true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ClickTime.NET.Models.Get.BasicUserModel_User_Get.TimesheetModel_Manage? User { get; set; }
#nullable restore
#else
        public ClickTime.NET.Models.Get.BasicUserModel_User_Get.TimesheetModel_Manage User { get; set; }
#endif
        /// <summary>The UserID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserID { get; set; }
#nullable restore
#else
        public string UserID { get; set; }
#endif
        /// <summary>
        /// Instantiates a new TimesheetModel_Manage and sets the default values.
        /// </summary>
        public TimesheetModel_Manage() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static TimesheetModel_Manage CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new TimesheetModel_Manage();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"Actions", n => { Actions = n.GetCollectionOfObjectValues<ActionModelTimesheetAction>(ActionModelTimesheetAction.CreateFromDiscriminatorValue)?.ToList(); } },
                {"ApprovedBy", n => { ApprovedBy = n.GetStringValue(); } },
                {"ApprovedByUserID", n => { ApprovedByUserID = n.GetStringValue(); } },
                {"ApprovedDate", n => { ApprovedDate = n.GetStringValue(); } },
                {"Comment", n => { Comment = n.GetStringValue(); } },
                {"DayTotals", n => { DayTotals = n.GetCollectionOfObjectValues<DayTotalModel>(DayTotalModel.CreateFromDiscriminatorValue)?.ToList(); } },
                {"EndDate", n => { EndDate = n.GetStringValue(); } },
                {"HasBeenSubmitted", n => { HasBeenSubmitted = n.GetBoolValue(); } },
                {"ID", n => { ID = n.GetStringValue(); } },
                {"LegacyID", n => { LegacyID = n.GetStringValue(); } },
                {"RejectedBy", n => { RejectedBy = n.GetStringValue(); } },
                {"RejectedByUserID", n => { RejectedByUserID = n.GetStringValue(); } },
                {"RejectedDate", n => { RejectedDate = n.GetStringValue(); } },
                {"StartDate", n => { StartDate = n.GetStringValue(); } },
                {"Status", n => { Status = n.GetEnumValue<TimesheetModel_Manage_Status>(); } },
                {"SubmittedBy", n => { SubmittedBy = n.GetStringValue(); } },
                {"SubmittedByUserID", n => { SubmittedByUserID = n.GetStringValue(); } },
                {"SubmittedDate", n => { SubmittedDate = n.GetStringValue(); } },
                {"User", n => { User = n.GetObjectValue<ClickTime.NET.Models.Get.BasicUserModel_User_Get.TimesheetModel_Manage>(ClickTime.NET.Models.Get.BasicUserModel_User_Get.TimesheetModel_Manage.CreateFromDiscriminatorValue); } },
                {"UserID", n => { UserID = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<ActionModelTimesheetAction>("Actions", Actions);
            writer.WriteStringValue("ApprovedBy", ApprovedBy);
            writer.WriteStringValue("ApprovedByUserID", ApprovedByUserID);
            writer.WriteStringValue("ApprovedDate", ApprovedDate);
            writer.WriteStringValue("Comment", Comment);
            writer.WriteCollectionOfObjectValues<DayTotalModel>("DayTotals", DayTotals);
            writer.WriteStringValue("EndDate", EndDate);
            writer.WriteBoolValue("HasBeenSubmitted", HasBeenSubmitted);
            writer.WriteStringValue("ID", ID);
            writer.WriteStringValue("LegacyID", LegacyID);
            writer.WriteStringValue("RejectedBy", RejectedBy);
            writer.WriteStringValue("RejectedByUserID", RejectedByUserID);
            writer.WriteStringValue("RejectedDate", RejectedDate);
            writer.WriteStringValue("StartDate", StartDate);
            writer.WriteEnumValue<TimesheetModel_Manage_Status>("Status", Status);
            writer.WriteStringValue("SubmittedBy", SubmittedBy);
            writer.WriteStringValue("SubmittedByUserID", SubmittedByUserID);
            writer.WriteStringValue("SubmittedDate", SubmittedDate);
            writer.WriteObjectValue<ClickTime.NET.Models.Get.BasicUserModel_User_Get.TimesheetModel_Manage>("User", User);
            writer.WriteStringValue("UserID", UserID);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
