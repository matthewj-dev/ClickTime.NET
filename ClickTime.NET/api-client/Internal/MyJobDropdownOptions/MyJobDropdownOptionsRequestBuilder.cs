// <auto-generated/>
using ClickTime.NET.Models.ResponseBodyGet;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace ClickTime.NET.Internal.MyJobDropdownOptions {
    /// <summary>
    /// Builds and executes requests for operations under \Internal\MyJobDropdownOptions
    /// </summary>
    public class MyJobDropdownOptionsRequestBuilder : BaseRequestBuilder {
        /// <summary>
        /// Instantiates a new MyJobDropdownOptionsRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MyJobDropdownOptionsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Internal/MyJobDropdownOptions{?MyJobs*}", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new MyJobDropdownOptionsRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MyJobDropdownOptionsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Internal/MyJobDropdownOptions{?MyJobs*}", rawUrl) {
        }
        /// <summary>
        /// Gets the jobs that should appear in current user dropdown options.
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<InternalJobDropdownModel_Root?> GetAsync(Action<RequestConfiguration<MyJobDropdownOptionsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default) {
#nullable restore
#else
        public async Task<InternalJobDropdownModel_Root> GetAsync(Action<RequestConfiguration<MyJobDropdownOptionsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default) {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<InternalJobDropdownModel_Root>(requestInfo, InternalJobDropdownModel_Root.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Gets the jobs that should appear in current user dropdown options.
        /// </summary>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<MyJobDropdownOptionsRequestBuilderGetQueryParameters>>? requestConfiguration = default) {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<MyJobDropdownOptionsRequestBuilderGetQueryParameters>> requestConfiguration = default) {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public MyJobDropdownOptionsRequestBuilder WithUrl(string rawUrl) {
            return new MyJobDropdownOptionsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Gets the jobs that should appear in current user dropdown options.
        /// </summary>
        public class MyJobDropdownOptionsRequestBuilderGetQueryParameters {
            /// <summary>Same filter used in /Me/Jobs endpoint</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public bool?[]? MyJobs { get; set; }
#nullable restore
#else
            public bool?[] MyJobs { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class MyJobDropdownOptionsRequestBuilderGetRequestConfiguration : RequestConfiguration<MyJobDropdownOptionsRequestBuilderGetQueryParameters> {
        }
    }
}
