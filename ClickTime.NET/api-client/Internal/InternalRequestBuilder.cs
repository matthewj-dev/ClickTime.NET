// <auto-generated/>
using ClickTime.NET.Internal.CapacitySettings;
using ClickTime.NET.Internal.JobDropdownOptions;
using ClickTime.NET.Internal.MyJobDropdownOptions;
using ClickTime.NET.Internal.MyRecents;
using ClickTime.NET.Internal.TaskDropdownOptions;
using ClickTime.NET.Internal.TimeEntry;
using ClickTime.NET.Internal.TimeEntrySettings;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace ClickTime.NET.Internal {
    /// <summary>
    /// Builds and executes requests for operations under \Internal
    /// </summary>
    public class InternalRequestBuilder : BaseRequestBuilder {
        /// <summary>The CapacitySettings property</summary>
        public CapacitySettingsRequestBuilder CapacitySettings { get =>
            new CapacitySettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The JobDropdownOptions property</summary>
        public JobDropdownOptionsRequestBuilder JobDropdownOptions { get =>
            new JobDropdownOptionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The MyJobDropdownOptions property</summary>
        public MyJobDropdownOptionsRequestBuilder MyJobDropdownOptions { get =>
            new MyJobDropdownOptionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The MyRecents property</summary>
        public MyRecentsRequestBuilder MyRecents { get =>
            new MyRecentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The TaskDropdownOptions property</summary>
        public TaskDropdownOptionsRequestBuilder TaskDropdownOptions { get =>
            new TaskDropdownOptionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The TimeEntry property</summary>
        public TimeEntryRequestBuilder TimeEntry { get =>
            new TimeEntryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The TimeEntrySettings property</summary>
        public TimeEntrySettingsRequestBuilder TimeEntrySettings { get =>
            new TimeEntrySettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new InternalRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public InternalRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Internal", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new InternalRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public InternalRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Internal", rawUrl) {
        }
    }
}
