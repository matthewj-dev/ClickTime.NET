// <auto-generated/>
using ClickTime.NET.Generated.Models.ResponseBodyListGet;
using ClickTime.NET.Generated.Timesheets.Item.HolidayEntries.Item;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace ClickTime.NET.Generated.Timesheets.Item.HolidayEntries {
    /// <summary>
    /// Builds and executes requests for operations under \Timesheets\{Timesheets-id}\HolidayEntries
    /// </summary>
    public class HolidayEntriesRequestBuilder : BaseRequestBuilder {
        /// <summary>Gets an item from the ClickTime.NET.Generated.Timesheets.item.HolidayEntries.item collection</summary>
        /// <param name="position">    Required</param>
        public WithHolidayEntryItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("holidayEntryID", position);
            return new WithHolidayEntryItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new HolidayEntriesRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public HolidayEntriesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Timesheets/{Timesheets%2Did}/HolidayEntries{?ID*,HolidayTypeID*,HolidayID*,limit*,offset*}", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new HolidayEntriesRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public HolidayEntriesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Timesheets/{Timesheets%2Did}/HolidayEntries{?ID*,HolidayTypeID*,HolidayID*,limit*,offset*}", rawUrl) {
        }
        /// <summary>
        ///   Company requirements:DCAA must be disabled.  User requirements:Admin, or Manager with permissions to Review timesheets (all Jobs).---# Sort Order:1. Date (Desc)1. ID
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<HolidayEntryModel_Root?> GetAsync(Action<RequestConfiguration<HolidayEntriesRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default) {
#nullable restore
#else
        public async Task<HolidayEntryModel_Root> GetAsync(Action<RequestConfiguration<HolidayEntriesRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default) {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<HolidayEntryModel_Root>(requestInfo, HolidayEntryModel_Root.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        ///   Company requirements:DCAA must be disabled.  User requirements:Admin, or Manager with permissions to Review timesheets (all Jobs).---# Sort Order:1. Date (Desc)1. ID
        /// </summary>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<HolidayEntriesRequestBuilderGetQueryParameters>>? requestConfiguration = default) {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<HolidayEntriesRequestBuilderGetQueryParameters>> requestConfiguration = default) {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public HolidayEntriesRequestBuilder WithUrl(string rawUrl) {
            return new HolidayEntriesRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        ///   Company requirements:DCAA must be disabled.  User requirements:Admin, or Manager with permissions to Review timesheets (all Jobs).---# Sort Order:1. Date (Desc)1. ID
        /// </summary>
        public class HolidayEntriesRequestBuilderGetQueryParameters {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string[]? HolidayID { get; set; }
#nullable restore
#else
            public string[] HolidayID { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string[]? HolidayTypeID { get; set; }
#nullable restore
#else
            public string[] HolidayTypeID { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string[]? ID { get; set; }
#nullable restore
#else
            public string[] ID { get; set; }
#endif
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            [QueryParameter("offset")]
            public int? Offset { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class HolidayEntriesRequestBuilderGetRequestConfiguration : RequestConfiguration<HolidayEntriesRequestBuilderGetQueryParameters> {
        }
    }
}
