// <auto-generated/>
using ClickTime.NET.Generated.Manage.Divisions;
using ClickTime.NET.Generated.Manage.ExpenseItems;
using ClickTime.NET.Generated.Manage.ExpenseSheets;
using ClickTime.NET.Generated.Manage.JobApprovals;
using ClickTime.NET.Generated.Manage.Permissions;
using ClickTime.NET.Generated.Manage.TimeOffRequests;
using ClickTime.NET.Generated.Manage.Timesheets;
using ClickTime.NET.Generated.Manage.Users;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace ClickTime.NET.Generated.Manage {
    /// <summary>
    /// Builds and executes requests for operations under \Manage
    /// </summary>
    public class ManageRequestBuilder : BaseRequestBuilder {
        /// <summary>The Divisions property</summary>
        public DivisionsRequestBuilder Divisions { get =>
            new DivisionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ExpenseItems property</summary>
        public ExpenseItemsRequestBuilder ExpenseItems { get =>
            new ExpenseItemsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ExpenseSheets property</summary>
        public ExpenseSheetsRequestBuilder ExpenseSheets { get =>
            new ExpenseSheetsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The JobApprovals property</summary>
        public JobApprovalsRequestBuilder JobApprovals { get =>
            new JobApprovalsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Permissions property</summary>
        public PermissionsRequestBuilder Permissions { get =>
            new PermissionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The TimeOffRequests property</summary>
        public TimeOffRequestsRequestBuilder TimeOffRequests { get =>
            new TimeOffRequestsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Timesheets property</summary>
        public TimesheetsRequestBuilder Timesheets { get =>
            new TimesheetsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Users property</summary>
        public UsersRequestBuilder Users { get =>
            new UsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new ManageRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ManageRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Manage", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new ManageRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ManageRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Manage", rawUrl) {
        }
    }
}
