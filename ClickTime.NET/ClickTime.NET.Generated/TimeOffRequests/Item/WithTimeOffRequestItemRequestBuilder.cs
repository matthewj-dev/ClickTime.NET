// <auto-generated/>
using ClickTime.NET.Generated.Models.ResponseBodyGet;
using ClickTime.NET.Generated.TimeOffRequests.Item.Actions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace ClickTime.NET.Generated.TimeOffRequests.Item {
    /// <summary>
    /// Builds and executes requests for operations under \TimeOffRequests\{timeOffRequestID}
    /// </summary>
    public class WithTimeOffRequestItemRequestBuilder : BaseRequestBuilder {
        /// <summary>The Actions property</summary>
        public ActionsRequestBuilder Actions { get =>
            new ActionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new WithTimeOffRequestItemRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithTimeOffRequestItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/TimeOffRequests/{timeOffRequestID}{?WithPermission*}", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new WithTimeOffRequestItemRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithTimeOffRequestItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/TimeOffRequests/{timeOffRequestID}{?WithPermission*}", rawUrl) {
        }
        /// <summary>
        ///   User requirements:Admin, or Manager with permissions to Lock timesheets, or Approve Time Off.  Company requirements:Company must have the Time Off Management optional module.
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<TimeOffRequestModel_Root?> GetAsync(Action<RequestConfiguration<WithTimeOffRequestItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default) {
#nullable restore
#else
        public async Task<TimeOffRequestModel_Root> GetAsync(Action<RequestConfiguration<WithTimeOffRequestItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default) {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<TimeOffRequestModel_Root>(requestInfo, TimeOffRequestModel_Root.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        ///   User requirements:Admin, or Manager with permissions to Lock timesheets, or Approve Time Off.  Company requirements:Company must have the Time Off Management optional module.
        /// </summary>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<WithTimeOffRequestItemRequestBuilderGetQueryParameters>>? requestConfiguration = default) {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<WithTimeOffRequestItemRequestBuilderGetQueryParameters>> requestConfiguration = default) {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public WithTimeOffRequestItemRequestBuilder WithUrl(string rawUrl) {
            return new WithTimeOffRequestItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        ///   User requirements:Admin, or Manager with permissions to Lock timesheets, or Approve Time Off.  Company requirements:Company must have the Time Off Management optional module.
        /// </summary>
        public class WithTimeOffRequestItemRequestBuilderGetQueryParameters {
            /// <summary>Filter Time Off Requests for Users in Divisions for which you have the specified permission. The Time Off Requests returned may include additional properties not normally visible. See the model definition for details on which additional properties can be seen.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? WithPermission { get; set; }
#nullable restore
#else
            public string WithPermission { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class WithTimeOffRequestItemRequestBuilderGetRequestConfiguration : RequestConfiguration<WithTimeOffRequestItemRequestBuilderGetQueryParameters> {
        }
    }
}
