// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ClickTime.NET.Generated.Models.Get {
    public class SummaryModel_Root : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The BillableHours property</summary>
        public double? BillableHours { get; set; }
        /// <summary>  User requirements:Security Level(s): Admin, Manager (View Billingrates)</summary>
        public double? Billings { get; set; }
        /// <summary>  User requirements:Security Level(s): Admin, Manager (View Costs)</summary>
        public double? Cost { get; set; }
        /// <summary>The Hours property</summary>
        public double? Hours { get; set; }
        /// <summary>The Key property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public SummaryModel_Root_Key? Key { get; set; }
#nullable restore
#else
        public SummaryModel_Root_Key Key { get; set; }
#endif
        /// <summary>
        /// Instantiates a new SummaryModel_Root and sets the default values.
        /// </summary>
        public SummaryModel_Root() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static SummaryModel_Root CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new SummaryModel_Root();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"BillableHours", n => { BillableHours = n.GetDoubleValue(); } },
                {"Billings", n => { Billings = n.GetDoubleValue(); } },
                {"Cost", n => { Cost = n.GetDoubleValue(); } },
                {"Hours", n => { Hours = n.GetDoubleValue(); } },
                {"Key", n => { Key = n.GetObjectValue<SummaryModel_Root_Key>(SummaryModel_Root_Key.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("BillableHours", BillableHours);
            writer.WriteDoubleValue("Billings", Billings);
            writer.WriteDoubleValue("Cost", Cost);
            writer.WriteDoubleValue("Hours", Hours);
            writer.WriteObjectValue<SummaryModel_Root_Key>("Key", Key);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
